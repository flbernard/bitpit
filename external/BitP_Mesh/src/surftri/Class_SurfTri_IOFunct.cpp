// ========================================================================== //
//                         - Class_SurfTri -                                  //
//                                                                            //
// Grid manager for unstructured meshes.                                      //
// ========================================================================== //
// INFO                                                                       //
// ========================================================================== //
// Author   : Alessandro Alaia                                                //
// Version  : v3.0                                                            //
//                                                                            //
// All rights reserved.                                                       //
// ========================================================================== //

// ========================================================================== //
// INCLUDES                                                                   //
// ========================================================================== //
# include "Class_SurfTri.hpp"

// ========================================================================== //
// IMPLEMENTATIONS                                                            //
// ========================================================================== //

// -------------------------------------------------------------------------- //
void Class_SurfTri::Export_dgf(
    string filename
) {

// ========================================================================== //
// void Class_SurfTri::Export_dgf(                                            //
//     string filename)                                                       //
//                                                                            //
// Export mesh data in a dgf file.                                            //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - filename      : string, .dgf file name.                                  //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
bitpit::DGFObj                    DGF(bitpit::utils::trim(filename));

// Counters
// none

// ========================================================================== //
// EXPORT MESH DATA                                                           //
// ========================================================================== //
DGF.save(nVertex, nSimplex, Vertex, Simplex);

return; };

// -------------------------------------------------------------------------- //
void Class_SurfTri::Import_dgf(
    string filename
) {

// ========================================================================== //
// void Class_SurfTri::Import_dgf(                                            //
//     string filename)                                                       //
//                                                                            //
// Import mesh data from a dgf file.                                          //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - filename     : string, .dgf filename.                                    //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATIION                                                     //
// ========================================================================== //

// Local variables
bitpit::DGFObj              DGF(bitpit::utils::trim(filename));

// Counters
// none

// ========================================================================== //
// READ MESH DATA                                                             //
// ========================================================================== //
DGF.load(nVertex, nSimplex, Vertex, Simplex);

return; };

// -------------------------------------------------------------------------- //
void Class_SurfTri::Export_stl(
    string filename,
    bool flag
) {

// ========================================================================== //
// void Class_SurfTri::Export_stl(                                            //
//     string filename,                                                       //
//     bool flag)                                                             //
//                                                                            //
// Export tassellation in a .stl file (triangulation only)                    //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - filename     : string, .stl file name                                    //
// - flag         : bool, flag for binary (flag = true) or ascii              //
//                  (flag = false) stl                                        //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
bitpit::STLObj                 STL(bitpit::utils::trim(filename), flag);

// Counters
// none

// ========================================================================== //
// GENERATE NORMALS IF NOT ALREADY BUILT                                      //
// ========================================================================== //
if ((Normal.size() == 0) || (Normal.size() < nSimplex)) {
    GenerateNormals();
}

// ========================================================================== //
// EXPORT MESH IN STL FILE                                                    //
// ========================================================================== //
STL.save("", nVertex, nSimplex, Vertex, Normal, Simplex);

return; };

// -------------------------------------------------------------------------- //
void Class_SurfTri::Import_stl(string filename, bool flag) {

// ========================================================================== //
// void Class_SurfTri::Import_stl(string filename, bool flag)                 //
//                                                                            //
// Import triangulation from a .stl file                                      //
// ========================================================================== //
// INPUT                                                                      //
// ========================================================================== //
// - filename     : string, .stl file name                                    //
// - flag         : bool, flag for binary (true), or ASCII (false) .stl file  //
// ========================================================================== //
// OUTPUT                                                                     //
// ========================================================================== //
// - none                                                                     //
// ========================================================================== //

// ========================================================================== //
// VARIABLES DECLARATION                                                      //
// ========================================================================== //

// Local variables
bitpit::STLObj                   STL(bitpit::utils::trim(filename), flag);

// Counters
// none

// ========================================================================== //
// READ MESH DATA FROM THE STL FILE                                           //
// ========================================================================== //
STL.load(nVertex, nSimplex, Vertex, Normal, Simplex);

return; };
